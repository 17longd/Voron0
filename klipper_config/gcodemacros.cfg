## To be used with BED_SCREWS_ADJUST or SCREWS_TILT_CALCULATE (points adjusted for zeroclick probe)
[bed_screws]
screw1: 60,5 #nozzle point is 60,5 and probe is 77,1
screw1_name: front screw
screw2: 10,110 #nozzle point is 10,110 and probe is 23,96
screw2_name: back left
screw3: 110,110 #nozzle point is 110,110 and probe is 119,96
screw3_name: back right

[gcode_macro LEVEL_BED]
gcode:
    G28
    BED_SCREWS_ADJUST

[gcode_macro GET_FIRMWARE_VERS]
gcode:
    M115

[gcode_macro LIGHTS_ON] 
gcode:
    SET_LED LED="matchsticks" RED=0.1451 GREEN=0.3216 BLUE=0.251 SYNC=0 TRANSMIT=1

[gcode_macro LIGHTS_OFF]
gcode:
    SET_LED LED="matchsticks" RED=0 GREEN=0 BLUE=0 SYNC=0 TRANSMIT=1
    
[gcode_macro PREHEAT_CHAMBER]
description: Preheat bed to 100°C and wait until hotend reaches 45°C passively
gcode:
    G28                            # Home all axes
    G90                            # Use absolute positioning
    G0 X60 Y60 Z12                # Move to heat soak position
    M106 S153                     # Set blowers to 60% power (max is 255)
    M140 S100                     # Set bed temperature to 100°C
    M190 S100                     # Wait for bed to reach 100°C

    RESPOND PREFIX="info" MSG="Bed at 100°C. Waiting for hotend to passively reach 45°C..."
    G4 S5                         # Wait for 5 seconds

    TEMPERATURE_WAIT SENSOR=extruder MINIMUM=44.5 MAXIMUM=45.5  # Wait for hotend temperature to reach 45°C

    RESPOND PREFIX="info" MSG="Hotend reached 45°C"


    
#####################################################################
# Macros
#####################################################################

[gcode_macro DISABLE_STEPPERS]
#Disables Steppers
gcode:
    M84

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
gcode:
    BED_MESH_CLEAR
    G28 PROBE_LOCK
    #BED_MESH_CALIBRATE #this seems to be buggy so removing for now
    #G28 Z
    DOCK_PROBE_UNLOCK
    #BED_MESH_PROFILE LOAD=default ; new, load bed mesh
    #G28                            ; home all axes
    G90                            ; absolute positioning    
  #  G1 Z20 F3000                   ; move nozzle away from bed

    # Create a purge line and starts the print
    G1 X5 Y4 Z0.4 F10000                             # Moves to starting point
    G92 E0                                           # Reset extruder 
    G1 X115 E20 F1000                                # Purge line
    G92 E0                                           # Reset extruder 
    SKEW_PROFILE LOAD=calilantern_skew_profile       # NEW - load skew profile

   
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F3600                 ; retract filament, was E-4.0
    G91                            ; relative positioning
    SET_SKEW CLEAR=1               ; NEW - Clear skew profile

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X60 Y118 F3600          ; park nozzle at rear G0 X60 Y{max_y} F3600 
  
[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute



  
#### Macros copied from Siboor ###################################################

[gcode_macro SHUTDOWN]
gcode:
  {action_call_remote_method("shutdown_machine")}
  
[pause_resume]

[display_status]

################################################################################
################################################################################


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    G91 
    G1 Z5 
    G90
    G92 E0
    G1 X118 Y118 E-3
    G92 E0
    M84 XYE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

#[gcode_macro RESUME]
#rename_existing: BASE_RESUME
##default_parameter_E: 1      # edit to your preferred retract length
#gcode:
#    G91
#    G1 E{E} F2100
#    G90
#    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
#    BASE_RESUME

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####

  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}



  RESUME_BASE {get_params}

#[gcode_macro PAUSE]
#rename_existing: BASE_PAUSE
#gcode:
#    SAVE_GCODE_STATE NAME=PAUSE_state
#    BASE_PAUSE
#    G91
#    G1 E-{E} F2100
#    G1 Z{Z}
#    G90
#   G1 X{X} Y{Y} F6000

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro SET_ACTIVE_SPOOL]
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method(
       "spoolman_set_active_spool",
       spool_id=id
    )}
  {% else %}
    {action_respond_info("Parameter 'ID' is required")}
  {% endif %}

[gcode_macro M0]
gcode:
  PAUSE

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg

  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
  {action_call_remote_method(
    "spoolman_set_active_spool",
    spool_id=None
  )}